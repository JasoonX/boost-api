/*
Boost API

This is a REST API of the Boost App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// AuthPost400Response struct for AuthPost400Response
type AuthPost400Response struct {
	Error *AuthPost400ResponseError `json:"error,omitempty"`
}

// NewAuthPost400Response instantiates a new AuthPost400Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthPost400Response() *AuthPost400Response {
	this := AuthPost400Response{}
	return &this
}

// NewAuthPost400ResponseWithDefaults instantiates a new AuthPost400Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthPost400ResponseWithDefaults() *AuthPost400Response {
	this := AuthPost400Response{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *AuthPost400Response) GetError() AuthPost400ResponseError {
	if o == nil || o.Error == nil {
		var ret AuthPost400ResponseError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthPost400Response) GetErrorOk() (*AuthPost400ResponseError, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *AuthPost400Response) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given AuthPost400ResponseError and assigns it to the Error field.
func (o *AuthPost400Response) SetError(v AuthPost400ResponseError) {
	o.Error = &v
}

func (o AuthPost400Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableAuthPost400Response struct {
	value *AuthPost400Response
	isSet bool
}

func (v NullableAuthPost400Response) Get() *AuthPost400Response {
	return v.value
}

func (v *NullableAuthPost400Response) Set(val *AuthPost400Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthPost400Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthPost400Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthPost400Response(val *AuthPost400Response) *NullableAuthPost400Response {
	return &NullableAuthPost400Response{value: val, isSet: true}
}

func (v NullableAuthPost400Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthPost400Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
