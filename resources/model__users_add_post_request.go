/*
Boost API

This is a REST API of the Boost App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// UsersAddPostRequest struct for UsersAddPostRequest
type UsersAddPostRequest struct {
	Data AddUser `json:"data"`
}

// NewUsersAddPostRequest instantiates a new UsersAddPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersAddPostRequest(data AddUser) *UsersAddPostRequest {
	this := UsersAddPostRequest{}
	this.Data = data
	return &this
}

// NewUsersAddPostRequestWithDefaults instantiates a new UsersAddPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersAddPostRequestWithDefaults() *UsersAddPostRequest {
	this := UsersAddPostRequest{}
	return &this
}

// GetData returns the Data field value
func (o *UsersAddPostRequest) GetData() AddUser {
	if o == nil {
		var ret AddUser
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *UsersAddPostRequest) GetDataOk() (*AddUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *UsersAddPostRequest) SetData(v AddUser) {
	o.Data = v
}

func (o UsersAddPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableUsersAddPostRequest struct {
	value *UsersAddPostRequest
	isSet bool
}

func (v NullableUsersAddPostRequest) Get() *UsersAddPostRequest {
	return v.value
}

func (v *NullableUsersAddPostRequest) Set(val *UsersAddPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersAddPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersAddPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersAddPostRequest(val *UsersAddPostRequest) *NullableUsersAddPostRequest {
	return &NullableUsersAddPostRequest{value: val, isSet: true}
}

func (v NullableUsersAddPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersAddPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
