/*
Boost API

This is a REST API of the Boost App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// UserRelationships struct for UserRelationships
type UserRelationships struct {
	Emails UserRelationshipsEmails  `json:"emails"`
	Phones *UserRelationshipsPhones `json:"phones,omitempty"`
}

// NewUserRelationships instantiates a new UserRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserRelationships(emails UserRelationshipsEmails) *UserRelationships {
	this := UserRelationships{}
	this.Emails = emails
	return &this
}

// NewUserRelationshipsWithDefaults instantiates a new UserRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserRelationshipsWithDefaults() *UserRelationships {
	this := UserRelationships{}
	return &this
}

// GetEmails returns the Emails field value
func (o *UserRelationships) GetEmails() UserRelationshipsEmails {
	if o == nil {
		var ret UserRelationshipsEmails
		return ret
	}

	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value
// and a boolean to check if the value has been set.
func (o *UserRelationships) GetEmailsOk() (*UserRelationshipsEmails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Emails, true
}

// SetEmails sets field value
func (o *UserRelationships) SetEmails(v UserRelationshipsEmails) {
	o.Emails = v
}

// GetPhones returns the Phones field value if set, zero value otherwise.
func (o *UserRelationships) GetPhones() UserRelationshipsPhones {
	if o == nil || o.Phones == nil {
		var ret UserRelationshipsPhones
		return ret
	}
	return *o.Phones
}

// GetPhonesOk returns a tuple with the Phones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserRelationships) GetPhonesOk() (*UserRelationshipsPhones, bool) {
	if o == nil || o.Phones == nil {
		return nil, false
	}
	return o.Phones, true
}

// HasPhones returns a boolean if a field has been set.
func (o *UserRelationships) HasPhones() bool {
	if o != nil && o.Phones != nil {
		return true
	}

	return false
}

// SetPhones gets a reference to the given UserRelationshipsPhones and assigns it to the Phones field.
func (o *UserRelationships) SetPhones(v UserRelationshipsPhones) {
	o.Phones = &v
}

func (o UserRelationships) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["emails"] = o.Emails
	}
	if o.Phones != nil {
		toSerialize["phones"] = o.Phones
	}
	return json.Marshal(toSerialize)
}

type NullableUserRelationships struct {
	value *UserRelationships
	isSet bool
}

func (v NullableUserRelationships) Get() *UserRelationships {
	return v.value
}

func (v *NullableUserRelationships) Set(val *UserRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableUserRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableUserRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserRelationships(val *UserRelationships) *NullableUserRelationships {
	return &NullableUserRelationships{value: val, isSet: true}
}

func (v NullableUserRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
