/*
Boost API

This is a REST API of the Boost App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// AddPhone struct for AddPhone
type AddPhone struct {
	Type          EntityType            `json:"type"`
	Attributes    AddPhoneAttributes    `json:"attributes"`
	Relationships AddPhoneRelationships `json:"relationships"`
}

// NewAddPhone instantiates a new AddPhone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddPhone(type_ EntityType, attributes AddPhoneAttributes, relationships AddPhoneRelationships) *AddPhone {
	this := AddPhone{}
	this.Type = type_
	this.Attributes = attributes
	this.Relationships = relationships
	return &this
}

// NewAddPhoneWithDefaults instantiates a new AddPhone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddPhoneWithDefaults() *AddPhone {
	this := AddPhone{}
	return &this
}

// GetType returns the Type field value
func (o *AddPhone) GetType() EntityType {
	if o == nil {
		var ret EntityType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AddPhone) GetTypeOk() (*EntityType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AddPhone) SetType(v EntityType) {
	o.Type = v
}

// GetAttributes returns the Attributes field value
func (o *AddPhone) GetAttributes() AddPhoneAttributes {
	if o == nil {
		var ret AddPhoneAttributes
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *AddPhone) GetAttributesOk() (*AddPhoneAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attributes, true
}

// SetAttributes sets field value
func (o *AddPhone) SetAttributes(v AddPhoneAttributes) {
	o.Attributes = v
}

// GetRelationships returns the Relationships field value
func (o *AddPhone) GetRelationships() AddPhoneRelationships {
	if o == nil {
		var ret AddPhoneRelationships
		return ret
	}

	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value
// and a boolean to check if the value has been set.
func (o *AddPhone) GetRelationshipsOk() (*AddPhoneRelationships, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relationships, true
}

// SetRelationships sets field value
func (o *AddPhone) SetRelationships(v AddPhoneRelationships) {
	o.Relationships = v
}

func (o AddPhone) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["attributes"] = o.Attributes
	}
	if true {
		toSerialize["relationships"] = o.Relationships
	}
	return json.Marshal(toSerialize)
}

type NullableAddPhone struct {
	value *AddPhone
	isSet bool
}

func (v NullableAddPhone) Get() *AddPhone {
	return v.value
}

func (v *NullableAddPhone) Set(val *AddPhone) {
	v.value = val
	v.isSet = true
}

func (v NullableAddPhone) IsSet() bool {
	return v.isSet
}

func (v *NullableAddPhone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddPhone(val *AddPhone) *NullableAddPhone {
	return &NullableAddPhone{value: val, isSet: true}
}

func (v NullableAddPhone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddPhone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
