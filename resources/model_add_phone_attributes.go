/*
Boost API

This is a REST API of the Boost App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// AddPhoneAttributes struct for AddPhoneAttributes
type AddPhoneAttributes struct {
	// Phone number of the subscriber.
	SubscriberNumber *string `json:"subscriber_number,omitempty"`
	// Country code of the subscriber.
	CountryCode *string `json:"country_code,omitempty"`
	// Extension of the subscriber.
	Extension *string `json:"extension,omitempty"`
}

// NewAddPhoneAttributes instantiates a new AddPhoneAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddPhoneAttributes() *AddPhoneAttributes {
	this := AddPhoneAttributes{}
	return &this
}

// NewAddPhoneAttributesWithDefaults instantiates a new AddPhoneAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddPhoneAttributesWithDefaults() *AddPhoneAttributes {
	this := AddPhoneAttributes{}
	return &this
}

// GetSubscriberNumber returns the SubscriberNumber field value if set, zero value otherwise.
func (o *AddPhoneAttributes) GetSubscriberNumber() string {
	if o == nil || o.SubscriberNumber == nil {
		var ret string
		return ret
	}
	return *o.SubscriberNumber
}

// GetSubscriberNumberOk returns a tuple with the SubscriberNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPhoneAttributes) GetSubscriberNumberOk() (*string, bool) {
	if o == nil || o.SubscriberNumber == nil {
		return nil, false
	}
	return o.SubscriberNumber, true
}

// HasSubscriberNumber returns a boolean if a field has been set.
func (o *AddPhoneAttributes) HasSubscriberNumber() bool {
	if o != nil && o.SubscriberNumber != nil {
		return true
	}

	return false
}

// SetSubscriberNumber gets a reference to the given string and assigns it to the SubscriberNumber field.
func (o *AddPhoneAttributes) SetSubscriberNumber(v string) {
	o.SubscriberNumber = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *AddPhoneAttributes) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPhoneAttributes) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *AddPhoneAttributes) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *AddPhoneAttributes) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *AddPhoneAttributes) GetExtension() string {
	if o == nil || o.Extension == nil {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPhoneAttributes) GetExtensionOk() (*string, bool) {
	if o == nil || o.Extension == nil {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *AddPhoneAttributes) HasExtension() bool {
	if o != nil && o.Extension != nil {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *AddPhoneAttributes) SetExtension(v string) {
	o.Extension = &v
}

func (o AddPhoneAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SubscriberNumber != nil {
		toSerialize["subscriber_number"] = o.SubscriberNumber
	}
	if o.CountryCode != nil {
		toSerialize["country_code"] = o.CountryCode
	}
	if o.Extension != nil {
		toSerialize["extension"] = o.Extension
	}
	return json.Marshal(toSerialize)
}

type NullableAddPhoneAttributes struct {
	value *AddPhoneAttributes
	isSet bool
}

func (v NullableAddPhoneAttributes) Get() *AddPhoneAttributes {
	return v.value
}

func (v *NullableAddPhoneAttributes) Set(val *AddPhoneAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAddPhoneAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAddPhoneAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddPhoneAttributes(val *AddPhoneAttributes) *NullableAddPhoneAttributes {
	return &NullableAddPhoneAttributes{value: val, isSet: true}
}

func (v NullableAddPhoneAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddPhoneAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
