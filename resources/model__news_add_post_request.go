/*
Boost API

This is a REST API of the Boost App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// NewsAddPostRequest struct for NewsAddPostRequest
type NewsAddPostRequest struct {
	Data []News `json:"data"`
}

// NewNewsAddPostRequest instantiates a new NewsAddPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewsAddPostRequest(data []News) *NewsAddPostRequest {
	this := NewsAddPostRequest{}
	this.Data = data
	return &this
}

// NewNewsAddPostRequestWithDefaults instantiates a new NewsAddPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewsAddPostRequestWithDefaults() *NewsAddPostRequest {
	this := NewsAddPostRequest{}
	return &this
}

// GetData returns the Data field value
func (o *NewsAddPostRequest) GetData() []News {
	if o == nil {
		var ret []News
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *NewsAddPostRequest) GetDataOk() ([]News, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *NewsAddPostRequest) SetData(v []News) {
	o.Data = v
}

func (o NewsAddPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableNewsAddPostRequest struct {
	value *NewsAddPostRequest
	isSet bool
}

func (v NullableNewsAddPostRequest) Get() *NewsAddPostRequest {
	return v.value
}

func (v *NullableNewsAddPostRequest) Set(val *NewsAddPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNewsAddPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNewsAddPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewsAddPostRequest(val *NewsAddPostRequest) *NullableNewsAddPostRequest {
	return &NullableNewsAddPostRequest{value: val, isSet: true}
}

func (v NullableNewsAddPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewsAddPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
