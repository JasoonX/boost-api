/*
Boost API

This is a REST API of the Boost App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// NewsGetRequest struct for NewsGetRequest
type NewsGetRequest struct {
	Data AddNews `json:"data"`
}

// NewNewsGetRequest instantiates a new NewsGetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewsGetRequest(data AddNews) *NewsGetRequest {
	this := NewsGetRequest{}
	this.Data = data
	return &this
}

// NewNewsGetRequestWithDefaults instantiates a new NewsGetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewsGetRequestWithDefaults() *NewsGetRequest {
	this := NewsGetRequest{}
	return &this
}

// GetData returns the Data field value
func (o *NewsGetRequest) GetData() AddNews {
	if o == nil {
		var ret AddNews
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *NewsGetRequest) GetDataOk() (*AddNews, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *NewsGetRequest) SetData(v AddNews) {
	o.Data = v
}

func (o NewsGetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableNewsGetRequest struct {
	value *NewsGetRequest
	isSet bool
}

func (v NullableNewsGetRequest) Get() *NewsGetRequest {
	return v.value
}

func (v *NullableNewsGetRequest) Set(val *NewsGetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNewsGetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNewsGetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewsGetRequest(val *NewsGetRequest) *NullableNewsGetRequest {
	return &NullableNewsGetRequest{value: val, isSet: true}
}

func (v NullableNewsGetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewsGetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
