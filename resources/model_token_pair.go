/*
Boost API

This is a REST API of the Boost App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// TokenPair struct for TokenPair
type TokenPair struct {
	Type       EntityType          `json:"type"`
	Attributes TokenPairAttributes `json:"attributes"`
}

// NewTokenPair instantiates a new TokenPair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenPair(type_ EntityType, attributes TokenPairAttributes) *TokenPair {
	this := TokenPair{}
	this.Type = type_
	this.Attributes = attributes
	return &this
}

// NewTokenPairWithDefaults instantiates a new TokenPair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenPairWithDefaults() *TokenPair {
	this := TokenPair{}
	return &this
}

// GetType returns the Type field value
func (o *TokenPair) GetType() EntityType {
	if o == nil {
		var ret EntityType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TokenPair) GetTypeOk() (*EntityType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TokenPair) SetType(v EntityType) {
	o.Type = v
}

// GetAttributes returns the Attributes field value
func (o *TokenPair) GetAttributes() TokenPairAttributes {
	if o == nil {
		var ret TokenPairAttributes
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *TokenPair) GetAttributesOk() (*TokenPairAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attributes, true
}

// SetAttributes sets field value
func (o *TokenPair) SetAttributes(v TokenPairAttributes) {
	o.Attributes = v
}

func (o TokenPair) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["attributes"] = o.Attributes
	}
	return json.Marshal(toSerialize)
}

type NullableTokenPair struct {
	value *TokenPair
	isSet bool
}

func (v NullableTokenPair) Get() *TokenPair {
	return v.value
}

func (v *NullableTokenPair) Set(val *TokenPair) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenPair) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenPair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenPair(val *TokenPair) *NullableTokenPair {
	return &NullableTokenPair{value: val, isSet: true}
}

func (v NullableTokenPair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenPair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
