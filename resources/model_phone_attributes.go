/*
Boost API

This is a REST API of the Boost App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// PhoneAttributes struct for PhoneAttributes
type PhoneAttributes struct {
	SubscriberNumber string  `json:"subscriber_number"`
	CountryCode      *string `json:"country_code,omitempty"`
	Extension        *string `json:"extension,omitempty"`
	Verified         *bool   `json:"verified,omitempty"`
	PrimaryFlag      *bool   `json:"primary_flag,omitempty"`
}

// NewPhoneAttributes instantiates a new PhoneAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhoneAttributes(subscriberNumber string) *PhoneAttributes {
	this := PhoneAttributes{}
	this.SubscriberNumber = subscriberNumber
	return &this
}

// NewPhoneAttributesWithDefaults instantiates a new PhoneAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhoneAttributesWithDefaults() *PhoneAttributes {
	this := PhoneAttributes{}
	return &this
}

// GetSubscriberNumber returns the SubscriberNumber field value
func (o *PhoneAttributes) GetSubscriberNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriberNumber
}

// GetSubscriberNumberOk returns a tuple with the SubscriberNumber field value
// and a boolean to check if the value has been set.
func (o *PhoneAttributes) GetSubscriberNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriberNumber, true
}

// SetSubscriberNumber sets field value
func (o *PhoneAttributes) SetSubscriberNumber(v string) {
	o.SubscriberNumber = v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *PhoneAttributes) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneAttributes) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *PhoneAttributes) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *PhoneAttributes) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *PhoneAttributes) GetExtension() string {
	if o == nil || o.Extension == nil {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneAttributes) GetExtensionOk() (*string, bool) {
	if o == nil || o.Extension == nil {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *PhoneAttributes) HasExtension() bool {
	if o != nil && o.Extension != nil {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *PhoneAttributes) SetExtension(v string) {
	o.Extension = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *PhoneAttributes) GetVerified() bool {
	if o == nil || o.Verified == nil {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneAttributes) GetVerifiedOk() (*bool, bool) {
	if o == nil || o.Verified == nil {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *PhoneAttributes) HasVerified() bool {
	if o != nil && o.Verified != nil {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *PhoneAttributes) SetVerified(v bool) {
	o.Verified = &v
}

// GetPrimaryFlag returns the PrimaryFlag field value if set, zero value otherwise.
func (o *PhoneAttributes) GetPrimaryFlag() bool {
	if o == nil || o.PrimaryFlag == nil {
		var ret bool
		return ret
	}
	return *o.PrimaryFlag
}

// GetPrimaryFlagOk returns a tuple with the PrimaryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneAttributes) GetPrimaryFlagOk() (*bool, bool) {
	if o == nil || o.PrimaryFlag == nil {
		return nil, false
	}
	return o.PrimaryFlag, true
}

// HasPrimaryFlag returns a boolean if a field has been set.
func (o *PhoneAttributes) HasPrimaryFlag() bool {
	if o != nil && o.PrimaryFlag != nil {
		return true
	}

	return false
}

// SetPrimaryFlag gets a reference to the given bool and assigns it to the PrimaryFlag field.
func (o *PhoneAttributes) SetPrimaryFlag(v bool) {
	o.PrimaryFlag = &v
}

func (o PhoneAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subscriber_number"] = o.SubscriberNumber
	}
	if o.CountryCode != nil {
		toSerialize["country_code"] = o.CountryCode
	}
	if o.Extension != nil {
		toSerialize["extension"] = o.Extension
	}
	if o.Verified != nil {
		toSerialize["verified"] = o.Verified
	}
	if o.PrimaryFlag != nil {
		toSerialize["primary_flag"] = o.PrimaryFlag
	}
	return json.Marshal(toSerialize)
}

type NullablePhoneAttributes struct {
	value *PhoneAttributes
	isSet bool
}

func (v NullablePhoneAttributes) Get() *PhoneAttributes {
	return v.value
}

func (v *NullablePhoneAttributes) Set(val *PhoneAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePhoneAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePhoneAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhoneAttributes(val *PhoneAttributes) *NullablePhoneAttributes {
	return &NullablePhoneAttributes{value: val, isSet: true}
}

func (v NullablePhoneAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhoneAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
