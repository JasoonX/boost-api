/*
Boost API

This is a REST API of the Boost App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// UsersPost201ResponseData struct for UsersPost201ResponseData
type UsersPost201ResponseData struct {
	User      User      `json:"user"`
	TokenPair TokenPair `json:"token_pair"`
}

// NewUsersPost201ResponseData instantiates a new UsersPost201ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersPost201ResponseData(user User, tokenPair TokenPair) *UsersPost201ResponseData {
	this := UsersPost201ResponseData{}
	this.User = user
	this.TokenPair = tokenPair
	return &this
}

// NewUsersPost201ResponseDataWithDefaults instantiates a new UsersPost201ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersPost201ResponseDataWithDefaults() *UsersPost201ResponseData {
	this := UsersPost201ResponseData{}
	return &this
}

// GetUser returns the User field value
func (o *UsersPost201ResponseData) GetUser() User {
	if o == nil {
		var ret User
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *UsersPost201ResponseData) GetUserOk() (*User, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *UsersPost201ResponseData) SetUser(v User) {
	o.User = v
}

// GetTokenPair returns the TokenPair field value
func (o *UsersPost201ResponseData) GetTokenPair() TokenPair {
	if o == nil {
		var ret TokenPair
		return ret
	}

	return o.TokenPair
}

// GetTokenPairOk returns a tuple with the TokenPair field value
// and a boolean to check if the value has been set.
func (o *UsersPost201ResponseData) GetTokenPairOk() (*TokenPair, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenPair, true
}

// SetTokenPair sets field value
func (o *UsersPost201ResponseData) SetTokenPair(v TokenPair) {
	o.TokenPair = v
}

func (o UsersPost201ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["user"] = o.User
	}
	if true {
		toSerialize["token_pair"] = o.TokenPair
	}
	return json.Marshal(toSerialize)
}

type NullableUsersPost201ResponseData struct {
	value *UsersPost201ResponseData
	isSet bool
}

func (v NullableUsersPost201ResponseData) Get() *UsersPost201ResponseData {
	return v.value
}

func (v *NullableUsersPost201ResponseData) Set(val *UsersPost201ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersPost201ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersPost201ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersPost201ResponseData(val *UsersPost201ResponseData) *NullableUsersPost201ResponseData {
	return &NullableUsersPost201ResponseData{value: val, isSet: true}
}

func (v NullableUsersPost201ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersPost201ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
