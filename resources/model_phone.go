/*
Boost API

This is a REST API of the Boost App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// Phone struct for Phone
type Phone struct {
	Id               string  `json:"id"`
	SubscriberNumber string  `json:"subscriber_number"`
	CountryCode      *string `json:"country_code,omitempty"`
	Extension        *string `json:"extension,omitempty"`
	Verified         *bool   `json:"verified,omitempty"`
	PrimaryFlag      *bool   `json:"primary_flag,omitempty"`
	UserId           string  `json:"user_id"`
}

// NewPhone instantiates a new Phone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhone(id string, subscriberNumber string, userId string) *Phone {
	this := Phone{}
	this.Id = id
	this.SubscriberNumber = subscriberNumber
	this.UserId = userId
	return &this
}

// NewPhoneWithDefaults instantiates a new Phone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhoneWithDefaults() *Phone {
	this := Phone{}
	return &this
}

// GetId returns the Id field value
func (o *Phone) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Phone) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Phone) SetId(v string) {
	o.Id = v
}

// GetSubscriberNumber returns the SubscriberNumber field value
func (o *Phone) GetSubscriberNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriberNumber
}

// GetSubscriberNumberOk returns a tuple with the SubscriberNumber field value
// and a boolean to check if the value has been set.
func (o *Phone) GetSubscriberNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriberNumber, true
}

// SetSubscriberNumber sets field value
func (o *Phone) SetSubscriberNumber(v string) {
	o.SubscriberNumber = v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *Phone) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Phone) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *Phone) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *Phone) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *Phone) GetExtension() string {
	if o == nil || o.Extension == nil {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Phone) GetExtensionOk() (*string, bool) {
	if o == nil || o.Extension == nil {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *Phone) HasExtension() bool {
	if o != nil && o.Extension != nil {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *Phone) SetExtension(v string) {
	o.Extension = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *Phone) GetVerified() bool {
	if o == nil || o.Verified == nil {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Phone) GetVerifiedOk() (*bool, bool) {
	if o == nil || o.Verified == nil {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *Phone) HasVerified() bool {
	if o != nil && o.Verified != nil {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *Phone) SetVerified(v bool) {
	o.Verified = &v
}

// GetPrimaryFlag returns the PrimaryFlag field value if set, zero value otherwise.
func (o *Phone) GetPrimaryFlag() bool {
	if o == nil || o.PrimaryFlag == nil {
		var ret bool
		return ret
	}
	return *o.PrimaryFlag
}

// GetPrimaryFlagOk returns a tuple with the PrimaryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Phone) GetPrimaryFlagOk() (*bool, bool) {
	if o == nil || o.PrimaryFlag == nil {
		return nil, false
	}
	return o.PrimaryFlag, true
}

// HasPrimaryFlag returns a boolean if a field has been set.
func (o *Phone) HasPrimaryFlag() bool {
	if o != nil && o.PrimaryFlag != nil {
		return true
	}

	return false
}

// SetPrimaryFlag gets a reference to the given bool and assigns it to the PrimaryFlag field.
func (o *Phone) SetPrimaryFlag(v bool) {
	o.PrimaryFlag = &v
}

// GetUserId returns the UserId field value
func (o *Phone) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *Phone) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *Phone) SetUserId(v string) {
	o.UserId = v
}

func (o Phone) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["subscriber_number"] = o.SubscriberNumber
	}
	if o.CountryCode != nil {
		toSerialize["country_code"] = o.CountryCode
	}
	if o.Extension != nil {
		toSerialize["extension"] = o.Extension
	}
	if o.Verified != nil {
		toSerialize["verified"] = o.Verified
	}
	if o.PrimaryFlag != nil {
		toSerialize["primary_flag"] = o.PrimaryFlag
	}
	if true {
		toSerialize["user_id"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullablePhone struct {
	value *Phone
	isSet bool
}

func (v NullablePhone) Get() *Phone {
	return v.value
}

func (v *NullablePhone) Set(val *Phone) {
	v.value = val
	v.isSet = true
}

func (v NullablePhone) IsSet() bool {
	return v.isSet
}

func (v *NullablePhone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhone(val *Phone) *NullablePhone {
	return &NullablePhone{value: val, isSet: true}
}

func (v NullablePhone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
