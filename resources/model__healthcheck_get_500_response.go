/*
Boost API

This is a REST API of the Boost App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// HealthcheckGet500Response struct for HealthcheckGet500Response
type HealthcheckGet500Response struct {
	Error *HealthcheckGet500ResponseError `json:"error,omitempty"`
}

// NewHealthcheckGet500Response instantiates a new HealthcheckGet500Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHealthcheckGet500Response() *HealthcheckGet500Response {
	this := HealthcheckGet500Response{}
	return &this
}

// NewHealthcheckGet500ResponseWithDefaults instantiates a new HealthcheckGet500Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHealthcheckGet500ResponseWithDefaults() *HealthcheckGet500Response {
	this := HealthcheckGet500Response{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *HealthcheckGet500Response) GetError() HealthcheckGet500ResponseError {
	if o == nil || o.Error == nil {
		var ret HealthcheckGet500ResponseError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthcheckGet500Response) GetErrorOk() (*HealthcheckGet500ResponseError, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *HealthcheckGet500Response) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given HealthcheckGet500ResponseError and assigns it to the Error field.
func (o *HealthcheckGet500Response) SetError(v HealthcheckGet500ResponseError) {
	o.Error = &v
}

func (o HealthcheckGet500Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableHealthcheckGet500Response struct {
	value *HealthcheckGet500Response
	isSet bool
}

func (v NullableHealthcheckGet500Response) Get() *HealthcheckGet500Response {
	return v.value
}

func (v *NullableHealthcheckGet500Response) Set(val *HealthcheckGet500Response) {
	v.value = val
	v.isSet = true
}

func (v NullableHealthcheckGet500Response) IsSet() bool {
	return v.isSet
}

func (v *NullableHealthcheckGet500Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHealthcheckGet500Response(val *HealthcheckGet500Response) *NullableHealthcheckGet500Response {
	return &NullableHealthcheckGet500Response{value: val, isSet: true}
}

func (v NullableHealthcheckGet500Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHealthcheckGet500Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
