/*
Boost API

This is a REST API of the Boost App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// AddNewsAttributes struct for AddNewsAttributes
type AddNewsAttributes struct {
	Media NewsMedia `json:"media"`
}

// NewAddNewsAttributes instantiates a new AddNewsAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddNewsAttributes(media NewsMedia) *AddNewsAttributes {
	this := AddNewsAttributes{}
	this.Media = media
	return &this
}

// NewAddNewsAttributesWithDefaults instantiates a new AddNewsAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddNewsAttributesWithDefaults() *AddNewsAttributes {
	this := AddNewsAttributes{}
	return &this
}

// GetMedia returns the Media field value
func (o *AddNewsAttributes) GetMedia() NewsMedia {
	if o == nil {
		var ret NewsMedia
		return ret
	}

	return o.Media
}

// GetMediaOk returns a tuple with the Media field value
// and a boolean to check if the value has been set.
func (o *AddNewsAttributes) GetMediaOk() (*NewsMedia, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Media, true
}

// SetMedia sets field value
func (o *AddNewsAttributes) SetMedia(v NewsMedia) {
	o.Media = v
}

func (o AddNewsAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["media"] = o.Media
	}
	return json.Marshal(toSerialize)
}

type NullableAddNewsAttributes struct {
	value *AddNewsAttributes
	isSet bool
}

func (v NullableAddNewsAttributes) Get() *AddNewsAttributes {
	return v.value
}

func (v *NullableAddNewsAttributes) Set(val *AddNewsAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAddNewsAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAddNewsAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddNewsAttributes(val *AddNewsAttributes) *NullableAddNewsAttributes {
	return &NullableAddNewsAttributes{value: val, isSet: true}
}

func (v NullableAddNewsAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddNewsAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
