/*
Boost API

This is a REST API of the Boost App.

API version: 0.0.1-beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// Email struct for Email
type Email struct {
	Id          string `json:"id"`
	Email       string `json:"email"`
	Verified    *bool  `json:"verified,omitempty"`
	PrimaryFlag *bool  `json:"primary_flag,omitempty"`
	UserId      string `json:"user_id"`
}

// NewEmail instantiates a new Email object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmail(id string, email string, userId string) *Email {
	this := Email{}
	this.Id = id
	this.Email = email
	this.UserId = userId
	return &this
}

// NewEmailWithDefaults instantiates a new Email object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailWithDefaults() *Email {
	this := Email{}
	return &this
}

// GetId returns the Id field value
func (o *Email) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Email) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Email) SetId(v string) {
	o.Id = v
}

// GetEmail returns the Email field value
func (o *Email) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *Email) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *Email) SetEmail(v string) {
	o.Email = v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *Email) GetVerified() bool {
	if o == nil || o.Verified == nil {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetVerifiedOk() (*bool, bool) {
	if o == nil || o.Verified == nil {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *Email) HasVerified() bool {
	if o != nil && o.Verified != nil {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *Email) SetVerified(v bool) {
	o.Verified = &v
}

// GetPrimaryFlag returns the PrimaryFlag field value if set, zero value otherwise.
func (o *Email) GetPrimaryFlag() bool {
	if o == nil || o.PrimaryFlag == nil {
		var ret bool
		return ret
	}
	return *o.PrimaryFlag
}

// GetPrimaryFlagOk returns a tuple with the PrimaryFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Email) GetPrimaryFlagOk() (*bool, bool) {
	if o == nil || o.PrimaryFlag == nil {
		return nil, false
	}
	return o.PrimaryFlag, true
}

// HasPrimaryFlag returns a boolean if a field has been set.
func (o *Email) HasPrimaryFlag() bool {
	if o != nil && o.PrimaryFlag != nil {
		return true
	}

	return false
}

// SetPrimaryFlag gets a reference to the given bool and assigns it to the PrimaryFlag field.
func (o *Email) SetPrimaryFlag(v bool) {
	o.PrimaryFlag = &v
}

// GetUserId returns the UserId field value
func (o *Email) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *Email) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *Email) SetUserId(v string) {
	o.UserId = v
}

func (o Email) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if o.Verified != nil {
		toSerialize["verified"] = o.Verified
	}
	if o.PrimaryFlag != nil {
		toSerialize["primary_flag"] = o.PrimaryFlag
	}
	if true {
		toSerialize["user_id"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableEmail struct {
	value *Email
	isSet bool
}

func (v NullableEmail) Get() *Email {
	return v.value
}

func (v *NullableEmail) Set(val *Email) {
	v.value = val
	v.isSet = true
}

func (v NullableEmail) IsSet() bool {
	return v.isSet
}

func (v *NullableEmail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmail(val *Email) *NullableEmail {
	return &NullableEmail{value: val, isSet: true}
}

func (v NullableEmail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
